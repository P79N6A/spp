// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.1.1.2 by WSRD Tencent.
// Generated from `star_rank.jce'
// **********************************************************************

#ifndef __STAR_RANK_H_
#define __STAR_RANK_H_

#include <map>
#include <string>
#include <vector>
#include "jce/Jce.h"
using namespace std;
#include "fans_growth_h5.h"


namespace CFtNewRank
{
    struct FanTuanScoreInfo : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanScoreInfo";
        }
        static string MD5()
        {
            return "701d7b4f3c3010a5e2d7d5b7d036ba52";
        }
        FanTuanScoreInfo()
        :dwFanTuanId(0),strStarTotalScore(""),ddwVideoView(0),ddwSearchCnt(0),ddwFollowCnt(0),ddwWeChatIndex(0),ddwPopularity(0),ddwStarReplyCnt(0),ddwStarCommentCnt(0),ddwStarFanPaiCnt(0),ddwStarOnlineCnt(0),ddwStarBefallCnt(0),dwLastRank(0),dwCurRank(0),dfVideoScore(0),dfSearchScore(0),dfFollowScore(0),dfWechatScore(0),ddwStarCommentScore(0),ddwStarFanPaiScore(0),ddwStarOnlineScore(0),ddwStarBefallScore(0),dwLastInfluenceWeekRank(0),dwCurInfluenceWeekRank(0)
        {
        }
        void resetDefautlt()
        {
            dwFanTuanId = 0;
            strStarTotalScore = "";
            ddwVideoView = 0;
            ddwSearchCnt = 0;
            ddwFollowCnt = 0;
            ddwWeChatIndex = 0;
            ddwPopularity = 0;
            ddwStarReplyCnt = 0;
            ddwStarCommentCnt = 0;
            ddwStarFanPaiCnt = 0;
            ddwStarOnlineCnt = 0;
            ddwStarBefallCnt = 0;
            dwLastRank = 0;
            dwCurRank = 0;
            dfVideoScore = 0;
            dfSearchScore = 0;
            dfFollowScore = 0;
            dfWechatScore = 0;
            ddwStarCommentScore = 0;
            ddwStarFanPaiScore = 0;
            ddwStarOnlineScore = 0;
            ddwStarBefallScore = 0;
            dwLastInfluenceWeekRank = 0;
            dwCurInfluenceWeekRank = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(dwFanTuanId, 1);
            _os.write(strStarTotalScore, 2);
            _os.write(ddwVideoView, 3);
            _os.write(ddwSearchCnt, 4);
            _os.write(ddwFollowCnt, 5);
            _os.write(ddwWeChatIndex, 6);
            _os.write(ddwPopularity, 7);
            _os.write(ddwStarReplyCnt, 8);
            _os.write(ddwStarCommentCnt, 9);
            _os.write(ddwStarFanPaiCnt, 10);
            _os.write(ddwStarOnlineCnt, 11);
            _os.write(ddwStarBefallCnt, 12);
            _os.write(dwLastRank, 13);
            _os.write(dwCurRank, 14);
            _os.write(dfVideoScore, 15);
            _os.write(dfSearchScore, 16);
            _os.write(dfFollowScore, 17);
            _os.write(dfWechatScore, 18);
            _os.write(ddwStarCommentScore, 20);
            _os.write(ddwStarFanPaiScore, 21);
            _os.write(ddwStarOnlineScore, 22);
            _os.write(ddwStarBefallScore, 23);
            _os.write(dwLastInfluenceWeekRank, 24);
            _os.write(dwCurInfluenceWeekRank, 25);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(dwFanTuanId, 1, true);
            _is.read(strStarTotalScore, 2, false);
            _is.read(ddwVideoView, 3, false);
            _is.read(ddwSearchCnt, 4, false);
            _is.read(ddwFollowCnt, 5, false);
            _is.read(ddwWeChatIndex, 6, false);
            _is.read(ddwPopularity, 7, false);
            _is.read(ddwStarReplyCnt, 8, false);
            _is.read(ddwStarCommentCnt, 9, false);
            _is.read(ddwStarFanPaiCnt, 10, false);
            _is.read(ddwStarOnlineCnt, 11, false);
            _is.read(ddwStarBefallCnt, 12, false);
            _is.read(dwLastRank, 13, false);
            _is.read(dwCurRank, 14, false);
            _is.read(dfVideoScore, 15, false);
            _is.read(dfSearchScore, 16, false);
            _is.read(dfFollowScore, 17, false);
            _is.read(dfWechatScore, 18, false);
            _is.read(ddwStarCommentScore, 20, false);
            _is.read(ddwStarFanPaiScore, 21, false);
            _is.read(ddwStarOnlineScore, 22, false);
            _is.read(ddwStarBefallScore, 23, false);
            _is.read(dwLastInfluenceWeekRank, 24, false);
            _is.read(dwCurInfluenceWeekRank, 25, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(dwFanTuanId,"dwFanTuanId");
            _ds.display(strStarTotalScore,"strStarTotalScore");
            _ds.display(ddwVideoView,"ddwVideoView");
            _ds.display(ddwSearchCnt,"ddwSearchCnt");
            _ds.display(ddwFollowCnt,"ddwFollowCnt");
            _ds.display(ddwWeChatIndex,"ddwWeChatIndex");
            _ds.display(ddwPopularity,"ddwPopularity");
            _ds.display(ddwStarReplyCnt,"ddwStarReplyCnt");
            _ds.display(ddwStarCommentCnt,"ddwStarCommentCnt");
            _ds.display(ddwStarFanPaiCnt,"ddwStarFanPaiCnt");
            _ds.display(ddwStarOnlineCnt,"ddwStarOnlineCnt");
            _ds.display(ddwStarBefallCnt,"ddwStarBefallCnt");
            _ds.display(dwLastRank,"dwLastRank");
            _ds.display(dwCurRank,"dwCurRank");
            _ds.display(dfVideoScore,"dfVideoScore");
            _ds.display(dfSearchScore,"dfSearchScore");
            _ds.display(dfFollowScore,"dfFollowScore");
            _ds.display(dfWechatScore,"dfWechatScore");
            _ds.display(ddwStarCommentScore,"ddwStarCommentScore");
            _ds.display(ddwStarFanPaiScore,"ddwStarFanPaiScore");
            _ds.display(ddwStarOnlineScore,"ddwStarOnlineScore");
            _ds.display(ddwStarBefallScore,"ddwStarBefallScore");
            _ds.display(dwLastInfluenceWeekRank,"dwLastInfluenceWeekRank");
            _ds.display(dwCurInfluenceWeekRank,"dwCurInfluenceWeekRank");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(dwFanTuanId, true);
            _ds.displaySimple(strStarTotalScore, true);
            _ds.displaySimple(ddwVideoView, true);
            _ds.displaySimple(ddwSearchCnt, true);
            _ds.displaySimple(ddwFollowCnt, true);
            _ds.displaySimple(ddwWeChatIndex, true);
            _ds.displaySimple(ddwPopularity, true);
            _ds.displaySimple(ddwStarReplyCnt, true);
            _ds.displaySimple(ddwStarCommentCnt, true);
            _ds.displaySimple(ddwStarFanPaiCnt, true);
            _ds.displaySimple(ddwStarOnlineCnt, true);
            _ds.displaySimple(ddwStarBefallCnt, true);
            _ds.displaySimple(dwLastRank, true);
            _ds.displaySimple(dwCurRank, true);
            _ds.displaySimple(dfVideoScore, true);
            _ds.displaySimple(dfSearchScore, true);
            _ds.displaySimple(dfFollowScore, true);
            _ds.displaySimple(dfWechatScore, true);
            _ds.displaySimple(ddwStarCommentScore, true);
            _ds.displaySimple(ddwStarFanPaiScore, true);
            _ds.displaySimple(ddwStarOnlineScore, true);
            _ds.displaySimple(ddwStarBefallScore, true);
            _ds.displaySimple(dwLastInfluenceWeekRank, true);
            _ds.displaySimple(dwCurInfluenceWeekRank, false);
            return _os;
        }
    public:
        taf::UInt32 dwFanTuanId;
        std::string strStarTotalScore;
        taf::Int64 ddwVideoView;
        taf::Int64 ddwSearchCnt;
        taf::Int64 ddwFollowCnt;
        taf::Int64 ddwWeChatIndex;
        taf::Int64 ddwPopularity;
        taf::Int64 ddwStarReplyCnt;
        taf::Int64 ddwStarCommentCnt;
        taf::Int64 ddwStarFanPaiCnt;
        taf::Int64 ddwStarOnlineCnt;
        taf::Int64 ddwStarBefallCnt;
        taf::UInt32 dwLastRank;
        taf::UInt32 dwCurRank;
        taf::Double dfVideoScore;
        taf::Double dfSearchScore;
        taf::Double dfFollowScore;
        taf::Double dfWechatScore;
        taf::Int64 ddwStarCommentScore;
        taf::Int64 ddwStarFanPaiScore;
        taf::Int64 ddwStarOnlineScore;
        taf::Int64 ddwStarBefallScore;
        taf::UInt32 dwLastInfluenceWeekRank;
        taf::UInt32 dwCurInfluenceWeekRank;
    };
    inline bool operator==(const FanTuanScoreInfo&l, const FanTuanScoreInfo&r)
    {
        return l.dwFanTuanId == r.dwFanTuanId && l.strStarTotalScore == r.strStarTotalScore && l.ddwVideoView == r.ddwVideoView && l.ddwSearchCnt == r.ddwSearchCnt && l.ddwFollowCnt == r.ddwFollowCnt && l.ddwWeChatIndex == r.ddwWeChatIndex && l.ddwPopularity == r.ddwPopularity && l.ddwStarReplyCnt == r.ddwStarReplyCnt && l.ddwStarCommentCnt == r.ddwStarCommentCnt && l.ddwStarFanPaiCnt == r.ddwStarFanPaiCnt && l.ddwStarOnlineCnt == r.ddwStarOnlineCnt && l.ddwStarBefallCnt == r.ddwStarBefallCnt && l.dwLastRank == r.dwLastRank && l.dwCurRank == r.dwCurRank && l.dfVideoScore == r.dfVideoScore && l.dfSearchScore == r.dfSearchScore && l.dfFollowScore == r.dfFollowScore && l.dfWechatScore == r.dfWechatScore && l.ddwStarCommentScore == r.ddwStarCommentScore && l.ddwStarFanPaiScore == r.ddwStarFanPaiScore && l.ddwStarOnlineScore == r.ddwStarOnlineScore && l.ddwStarBefallScore == r.ddwStarBefallScore && l.dwLastInfluenceWeekRank == r.dwLastInfluenceWeekRank && l.dwCurInfluenceWeekRank == r.dwCurInfluenceWeekRank;
    }
    inline bool operator!=(const FanTuanScoreInfo&l, const FanTuanScoreInfo&r)
    {
        return !(l == r);
    }

    struct FanTuanDetailInfo : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanDetailInfo";
        }
        static string MD5()
        {
            return "9194529d75bff1671fb2e04fd610d40e";
        }
        FanTuanDetailInfo()
        :dwFanTuanId(0),dwStarId(0),iStarType(0),strName(""),strDesc(""),strHeader(""),bAttention(0),strHotShow(""),strDataKey(""),iPosition(0)
        {
        }
        void resetDefautlt()
        {
            dwFanTuanId = 0;
            dwStarId = 0;
            iStarType = 0;
            strName = "";
            strDesc = "";
            strHeader = "";
            bAttention = 0;
            strHotShow = "";
            strDataKey = "";
            iPosition = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(dwFanTuanId, 1);
            _os.write(dwStarId, 2);
            _os.write(iStarType, 3);
            _os.write(strName, 4);
            _os.write(strDesc, 5);
            _os.write(strHeader, 7);
            _os.write(bAttention, 8);
            _os.write(stFanTuanScoreInfo, 9);
            _os.write(strHotShow, 10);
            _os.write(strDataKey, 11);
            _os.write(iPosition, 12);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(dwFanTuanId, 1, true);
            _is.read(dwStarId, 2, true);
            _is.read(iStarType, 3, true);
            _is.read(strName, 4, false);
            _is.read(strDesc, 5, false);
            _is.read(strHeader, 7, false);
            _is.read(bAttention, 8, false);
            _is.read(stFanTuanScoreInfo, 9, false);
            _is.read(strHotShow, 10, false);
            _is.read(strDataKey, 11, false);
            _is.read(iPosition, 12, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(dwFanTuanId,"dwFanTuanId");
            _ds.display(dwStarId,"dwStarId");
            _ds.display(iStarType,"iStarType");
            _ds.display(strName,"strName");
            _ds.display(strDesc,"strDesc");
            _ds.display(strHeader,"strHeader");
            _ds.display(bAttention,"bAttention");
            _ds.display(stFanTuanScoreInfo,"stFanTuanScoreInfo");
            _ds.display(strHotShow,"strHotShow");
            _ds.display(strDataKey,"strDataKey");
            _ds.display(iPosition,"iPosition");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(dwFanTuanId, true);
            _ds.displaySimple(dwStarId, true);
            _ds.displaySimple(iStarType, true);
            _ds.displaySimple(strName, true);
            _ds.displaySimple(strDesc, true);
            _ds.displaySimple(strHeader, true);
            _ds.displaySimple(bAttention, true);
            _ds.displaySimple(stFanTuanScoreInfo, true);
            _ds.displaySimple(strHotShow, true);
            _ds.displaySimple(strDataKey, true);
            _ds.displaySimple(iPosition, false);
            return _os;
        }
    public:
        taf::UInt32 dwFanTuanId;
        taf::UInt32 dwStarId;
        taf::UInt32 iStarType;
        std::string strName;
        std::string strDesc;
        std::string strHeader;
        taf::Char bAttention;
        CFtNewRank::FanTuanScoreInfo stFanTuanScoreInfo;
        std::string strHotShow;
        std::string strDataKey;
        taf::Int32 iPosition;
    };
    inline bool operator==(const FanTuanDetailInfo&l, const FanTuanDetailInfo&r)
    {
        return l.dwFanTuanId == r.dwFanTuanId && l.dwStarId == r.dwStarId && l.iStarType == r.iStarType && l.strName == r.strName && l.strDesc == r.strDesc && l.strHeader == r.strHeader && l.bAttention == r.bAttention && l.stFanTuanScoreInfo == r.stFanTuanScoreInfo && l.strHotShow == r.strHotShow && l.strDataKey == r.strDataKey && l.iPosition == r.iPosition;
    }
    inline bool operator!=(const FanTuanDetailInfo&l, const FanTuanDetailInfo&r)
    {
        return !(l == r);
    }

    struct BannerImg : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.BannerImg";
        }
        static string MD5()
        {
            return "0c1d945735360d4e3752e1b2d448ba0c";
        }
        BannerImg()
        :people(""),bg(""),name("")
        {
        }
        void resetDefautlt()
        {
            people = "";
            bg = "";
            name = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(people, 1);
            _os.write(bg, 2);
            _os.write(name, 3);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(people, 1, true);
            _is.read(bg, 2, true);
            _is.read(name, 3, true);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(people,"people");
            _ds.display(bg,"bg");
            _ds.display(name,"name");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(people, true);
            _ds.displaySimple(bg, true);
            _ds.displaySimple(name, false);
            return _os;
        }
    public:
        std::string people;
        std::string bg;
        std::string name;
    };
    inline bool operator==(const BannerImg&l, const BannerImg&r)
    {
        return l.people == r.people && l.bg == r.bg && l.name == r.name;
    }
    inline bool operator!=(const BannerImg&l, const BannerImg&r)
    {
        return !(l == r);
    }

    struct FanTuanLink : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanLink";
        }
        static string MD5()
        {
            return "325d87d477a8cf7a6468ed6bb39da964";
        }
        FanTuanLink()
        :strRenqiLink(""),strVideoLink("")
        {
        }
        void resetDefautlt()
        {
            strRenqiLink = "";
            strVideoLink = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(strRenqiLink, 1);
            _os.write(strVideoLink, 2);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(strRenqiLink, 1, false);
            _is.read(strVideoLink, 2, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(strRenqiLink,"strRenqiLink");
            _ds.display(strVideoLink,"strVideoLink");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(strRenqiLink, true);
            _ds.displaySimple(strVideoLink, false);
            return _os;
        }
    public:
        std::string strRenqiLink;
        std::string strVideoLink;
    };
    inline bool operator==(const FanTuanLink&l, const FanTuanLink&r)
    {
        return l.strRenqiLink == r.strRenqiLink && l.strVideoLink == r.strVideoLink;
    }
    inline bool operator!=(const FanTuanLink&l, const FanTuanLink&r)
    {
        return !(l == r);
    }

    struct RankRule : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.RankRule";
        }
        static string MD5()
        {
            return "325d87d477a8cf7a6468ed6bb39da964";
        }
        RankRule()
        :strRuleDesc(""),strRuleTitle("")
        {
        }
        void resetDefautlt()
        {
            strRuleDesc = "";
            strRuleTitle = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(strRuleDesc, 1);
            _os.write(strRuleTitle, 2);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(strRuleDesc, 1, false);
            _is.read(strRuleTitle, 2, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(strRuleDesc,"strRuleDesc");
            _ds.display(strRuleTitle,"strRuleTitle");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(strRuleDesc, true);
            _ds.displaySimple(strRuleTitle, false);
            return _os;
        }
    public:
        std::string strRuleDesc;
        std::string strRuleTitle;
    };
    inline bool operator==(const RankRule&l, const RankRule&r)
    {
        return l.strRuleDesc == r.strRuleDesc && l.strRuleTitle == r.strRuleTitle;
    }
    inline bool operator!=(const RankRule&l, const RankRule&r)
    {
        return !(l == r);
    }

    struct STPersonData : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.STPersonData";
        }
        static string MD5()
        {
            return "a2b85a9e0f7b72a3b6cbdd12ac2e449e";
        }
        STPersonData()
        :lUserid(0),strNick(""),strHead(""),strCity(""),strCountry(""),strSex(""),cFrom(0),dwCreateTime(0),dwStatus(0),lGiftPoint(0)
        {
        }
        void resetDefautlt()
        {
            lUserid = 0;
            strNick = "";
            strHead = "";
            strCity = "";
            strCountry = "";
            strSex = "";
            cFrom = 0;
            dwCreateTime = 0;
            dwStatus = 0;
            lGiftPoint = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(lUserid, 0);
            _os.write(strNick, 1);
            _os.write(strHead, 2);
            _os.write(strCity, 3);
            _os.write(strCountry, 4);
            _os.write(strSex, 5);
            _os.write(cFrom, 6);
            _os.write(dwCreateTime, 7);
            _os.write(dwStatus, 8);
            _os.write(lGiftPoint, 9);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(lUserid, 0, true);
            _is.read(strNick, 1, true);
            _is.read(strHead, 2, true);
            _is.read(strCity, 3, true);
            _is.read(strCountry, 4, true);
            _is.read(strSex, 5, true);
            _is.read(cFrom, 6, true);
            _is.read(dwCreateTime, 7, true);
            _is.read(dwStatus, 8, true);
            _is.read(lGiftPoint, 9, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(lUserid,"lUserid");
            _ds.display(strNick,"strNick");
            _ds.display(strHead,"strHead");
            _ds.display(strCity,"strCity");
            _ds.display(strCountry,"strCountry");
            _ds.display(strSex,"strSex");
            _ds.display(cFrom,"cFrom");
            _ds.display(dwCreateTime,"dwCreateTime");
            _ds.display(dwStatus,"dwStatus");
            _ds.display(lGiftPoint,"lGiftPoint");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(lUserid, true);
            _ds.displaySimple(strNick, true);
            _ds.displaySimple(strHead, true);
            _ds.displaySimple(strCity, true);
            _ds.displaySimple(strCountry, true);
            _ds.displaySimple(strSex, true);
            _ds.displaySimple(cFrom, true);
            _ds.displaySimple(dwCreateTime, true);
            _ds.displaySimple(dwStatus, true);
            _ds.displaySimple(lGiftPoint, false);
            return _os;
        }
    public:
        taf::Int64 lUserid;
        std::string strNick;
        std::string strHead;
        std::string strCity;
        std::string strCountry;
        std::string strSex;
        taf::UInt8 cFrom;
        taf::UInt32 dwCreateTime;
        taf::UInt32 dwStatus;
        taf::Int64 lGiftPoint;
    };
    inline bool operator==(const STPersonData&l, const STPersonData&r)
    {
        return l.lUserid == r.lUserid && l.strNick == r.strNick && l.strHead == r.strHead && l.strCity == r.strCity && l.strCountry == r.strCountry && l.strSex == r.strSex && l.cFrom == r.cFrom && l.dwCreateTime == r.dwCreateTime && l.dwStatus == r.dwStatus && l.lGiftPoint == r.lGiftPoint;
    }
    inline bool operator!=(const STPersonData&l, const STPersonData&r)
    {
        return !(l == r);
    }

    struct STFansInfo : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.STFansInfo";
        }
        static string MD5()
        {
            return "83ffc76c95b6997ec0ee52eb08e73b0d";
        }
        STFansInfo()
        :lGiftPoint(0),strPersonalLink("")
        {
        }
        void resetDefautlt()
        {
            lGiftPoint = 0;
            strPersonalLink = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(stPersonData, 0);
            _os.write(lGiftPoint, 1);
            _os.write(strPersonalLink, 2);
            _os.write(stBadgeLevelInfo, 3);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(stPersonData, 0, true);
            _is.read(lGiftPoint, 1, true);
            _is.read(strPersonalLink, 2, false);
            _is.read(stBadgeLevelInfo, 3, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(stPersonData,"stPersonData");
            _ds.display(lGiftPoint,"lGiftPoint");
            _ds.display(strPersonalLink,"strPersonalLink");
            _ds.display(stBadgeLevelInfo,"stBadgeLevelInfo");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(stPersonData, true);
            _ds.displaySimple(lGiftPoint, true);
            _ds.displaySimple(strPersonalLink, true);
            _ds.displaySimple(stBadgeLevelInfo, false);
            return _os;
        }
    public:
        CFtNewRank::STPersonData stPersonData;
        taf::Int64 lGiftPoint;
        std::string strPersonalLink;
        FansAdapt::stBadgeLevel stBadgeLevelInfo;
    };
    inline bool operator==(const STFansInfo&l, const STFansInfo&r)
    {
        return l.stPersonData == r.stPersonData && l.lGiftPoint == r.lGiftPoint && l.strPersonalLink == r.strPersonalLink && l.stBadgeLevelInfo == r.stBadgeLevelInfo;
    }
    inline bool operator!=(const STFansInfo&l, const STFansInfo&r)
    {
        return !(l == r);
    }

    struct FanTuanStarRankMenuReq : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanStarRankMenuReq";
        }
        static string MD5()
        {
            return "39ce5f9d2d01b1363c60e696ddada6e6";
        }
        FanTuanStarRankMenuReq()
        :cRankType(0),wPageFlags(0),cTimeType(0),dwRankTime(0),dwReqNum(0),dwPage(0),strDataKey(""),bFrom(0),dwStarId(0)
        {
        }
        void resetDefautlt()
        {
            cRankType = 0;
            wPageFlags = 0;
            cTimeType = 0;
            dwRankTime = 0;
            dwReqNum = 0;
            dwPage = 0;
            strDataKey = "";
            bFrom = 0;
            dwStarId = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(cRankType, 1);
            _os.write(wPageFlags, 2);
            _os.write(cTimeType, 3);
            _os.write(dwRankTime, 4);
            _os.write(dwReqNum, 5);
            _os.write(dwPage, 6);
            _os.write(strDataKey, 7);
            _os.write(bFrom, 8);
            _os.write(dwStarId, 9);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(cRankType, 1, true);
            _is.read(wPageFlags, 2, false);
            _is.read(cTimeType, 3, false);
            _is.read(dwRankTime, 4, false);
            _is.read(dwReqNum, 5, false);
            _is.read(dwPage, 6, false);
            _is.read(strDataKey, 7, false);
            _is.read(bFrom, 8, false);
            _is.read(dwStarId, 9, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(cRankType,"cRankType");
            _ds.display(wPageFlags,"wPageFlags");
            _ds.display(cTimeType,"cTimeType");
            _ds.display(dwRankTime,"dwRankTime");
            _ds.display(dwReqNum,"dwReqNum");
            _ds.display(dwPage,"dwPage");
            _ds.display(strDataKey,"strDataKey");
            _ds.display(bFrom,"bFrom");
            _ds.display(dwStarId,"dwStarId");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(cRankType, true);
            _ds.displaySimple(wPageFlags, true);
            _ds.displaySimple(cTimeType, true);
            _ds.displaySimple(dwRankTime, true);
            _ds.displaySimple(dwReqNum, true);
            _ds.displaySimple(dwPage, true);
            _ds.displaySimple(strDataKey, true);
            _ds.displaySimple(bFrom, true);
            _ds.displaySimple(dwStarId, false);
            return _os;
        }
    public:
        taf::UInt8 cRankType;
        taf::UInt16 wPageFlags;
        taf::UInt16 cTimeType;
        taf::Int64 dwRankTime;
        taf::UInt32 dwReqNum;
        taf::UInt32 dwPage;
        std::string strDataKey;
        taf::Int32 bFrom;
        taf::UInt32 dwStarId;
    };
    inline bool operator==(const FanTuanStarRankMenuReq&l, const FanTuanStarRankMenuReq&r)
    {
        return l.cRankType == r.cRankType && l.wPageFlags == r.wPageFlags && l.cTimeType == r.cTimeType && l.dwRankTime == r.dwRankTime && l.dwReqNum == r.dwReqNum && l.dwPage == r.dwPage && l.strDataKey == r.strDataKey && l.bFrom == r.bFrom && l.dwStarId == r.dwStarId;
    }
    inline bool operator!=(const FanTuanStarRankMenuReq&l, const FanTuanStarRankMenuReq&r)
    {
        return !(l == r);
    }

    struct FanTuanStarRankMenuRsp : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanStarRankMenuRsp";
        }
        static string MD5()
        {
            return "4fdd7e1118b050a43bf14131d597712e";
        }
        FanTuanStarRankMenuRsp()
        :iErrCode(0),strErrMsg(""),dwPeri(0),bHasNextPage(false),iTimeStamp(0)
        {
        }
        void resetDefautlt()
        {
            iErrCode = 0;
            strErrMsg = "";
            dwPeri = 0;
            bHasNextPage = false;
            iTimeStamp = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(iErrCode, 1);
            _os.write(strErrMsg, 2);
            _os.write(mapFtStarRankInfo, 3);
            _os.write(dwPeri, 4);
            _os.write(bHasNextPage, 5);
            _os.write(stBannerImg, 6);
            _os.write(iTimeStamp, 7);
            _os.write(vecUserInfo, 8);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(iErrCode, 1, true);
            _is.read(strErrMsg, 2, false);
            _is.read(mapFtStarRankInfo, 3, false);
            _is.read(dwPeri, 4, false);
            _is.read(bHasNextPage, 5, false);
            _is.read(stBannerImg, 6, false);
            _is.read(iTimeStamp, 7, false);
            _is.read(vecUserInfo, 8, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(iErrCode,"iErrCode");
            _ds.display(strErrMsg,"strErrMsg");
            _ds.display(mapFtStarRankInfo,"mapFtStarRankInfo");
            _ds.display(dwPeri,"dwPeri");
            _ds.display(bHasNextPage,"bHasNextPage");
            _ds.display(stBannerImg,"stBannerImg");
            _ds.display(iTimeStamp,"iTimeStamp");
            _ds.display(vecUserInfo,"vecUserInfo");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(iErrCode, true);
            _ds.displaySimple(strErrMsg, true);
            _ds.displaySimple(mapFtStarRankInfo, true);
            _ds.displaySimple(dwPeri, true);
            _ds.displaySimple(bHasNextPage, true);
            _ds.displaySimple(stBannerImg, true);
            _ds.displaySimple(iTimeStamp, true);
            _ds.displaySimple(vecUserInfo, false);
            return _os;
        }
    public:
        taf::Int32 iErrCode;
        std::string strErrMsg;
        map<taf::UInt8, vector<CFtNewRank::FanTuanDetailInfo> > mapFtStarRankInfo;
        taf::UInt32 dwPeri;
        taf::Bool bHasNextPage;
        CFtNewRank::BannerImg stBannerImg;
        taf::Int32 iTimeStamp;
        vector<CFtNewRank::STFansInfo> vecUserInfo;
    };
    inline bool operator==(const FanTuanStarRankMenuRsp&l, const FanTuanStarRankMenuRsp&r)
    {
        return l.iErrCode == r.iErrCode && l.strErrMsg == r.strErrMsg && l.mapFtStarRankInfo == r.mapFtStarRankInfo && l.dwPeri == r.dwPeri && l.bHasNextPage == r.bHasNextPage && l.stBannerImg == r.stBannerImg && l.iTimeStamp == r.iTimeStamp && l.vecUserInfo == r.vecUserInfo;
    }
    inline bool operator!=(const FanTuanStarRankMenuRsp&l, const FanTuanStarRankMenuRsp&r)
    {
        return !(l == r);
    }

    struct FanTuanStarRankInfoReq : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanStarRankInfoReq";
        }
        static string MD5()
        {
            return "440ddfae6232902746bad5ffc9ae0505";
        }
        FanTuanStarRankInfoReq()
        :dwFanTuanId(0),dwRankTime(0),cRankType(0),cTimeType(0),dwStarId(0),bFrom(0)
        {
        }
        void resetDefautlt()
        {
            dwFanTuanId = 0;
            dwRankTime = 0;
            cRankType = 0;
            cTimeType = 0;
            dwStarId = 0;
            bFrom = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(dwFanTuanId, 1);
            _os.write(dwRankTime, 2);
            _os.write(cRankType, 3);
            _os.write(cTimeType, 4);
            _os.write(dwStarId, 5);
            _os.write(bFrom, 6);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(dwFanTuanId, 1, true);
            _is.read(dwRankTime, 2, false);
            _is.read(cRankType, 3, true);
            _is.read(cTimeType, 4, false);
            _is.read(dwStarId, 5, false);
            _is.read(bFrom, 6, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(dwFanTuanId,"dwFanTuanId");
            _ds.display(dwRankTime,"dwRankTime");
            _ds.display(cRankType,"cRankType");
            _ds.display(cTimeType,"cTimeType");
            _ds.display(dwStarId,"dwStarId");
            _ds.display(bFrom,"bFrom");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(dwFanTuanId, true);
            _ds.displaySimple(dwRankTime, true);
            _ds.displaySimple(cRankType, true);
            _ds.displaySimple(cTimeType, true);
            _ds.displaySimple(dwStarId, true);
            _ds.displaySimple(bFrom, false);
            return _os;
        }
    public:
        taf::UInt32 dwFanTuanId;
        taf::Int64 dwRankTime;
        taf::UInt8 cRankType;
        taf::UInt32 cTimeType;
        taf::UInt32 dwStarId;
        taf::Int32 bFrom;
    };
    inline bool operator==(const FanTuanStarRankInfoReq&l, const FanTuanStarRankInfoReq&r)
    {
        return l.dwFanTuanId == r.dwFanTuanId && l.dwRankTime == r.dwRankTime && l.cRankType == r.cRankType && l.cTimeType == r.cTimeType && l.dwStarId == r.dwStarId && l.bFrom == r.bFrom;
    }
    inline bool operator!=(const FanTuanStarRankInfoReq&l, const FanTuanStarRankInfoReq&r)
    {
        return !(l == r);
    }

    struct FanTuanStarRankInfoRsp : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanStarRankInfoRsp";
        }
        static string MD5()
        {
            return "0d7c0404b69786881e5ae3c8c109241d";
        }
        FanTuanStarRankInfoRsp()
        :iErrCode(0),strErrMsg("")
        {
        }
        void resetDefautlt()
        {
            iErrCode = 0;
            strErrMsg = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(iErrCode, 1);
            _os.write(strErrMsg, 2);
            _os.write(stCurDetailInfo, 3);
            _os.write(stBackGoundScore, 4);
            _os.write(stFanTuanLink, 5);
            _os.write(vecUserInfo, 6);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(iErrCode, 1, true);
            _is.read(strErrMsg, 2, false);
            _is.read(stCurDetailInfo, 3, false);
            _is.read(stBackGoundScore, 4, false);
            _is.read(stFanTuanLink, 5, false);
            _is.read(vecUserInfo, 6, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(iErrCode,"iErrCode");
            _ds.display(strErrMsg,"strErrMsg");
            _ds.display(stCurDetailInfo,"stCurDetailInfo");
            _ds.display(stBackGoundScore,"stBackGoundScore");
            _ds.display(stFanTuanLink,"stFanTuanLink");
            _ds.display(vecUserInfo,"vecUserInfo");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(iErrCode, true);
            _ds.displaySimple(strErrMsg, true);
            _ds.displaySimple(stCurDetailInfo, true);
            _ds.displaySimple(stBackGoundScore, true);
            _ds.displaySimple(stFanTuanLink, true);
            _ds.displaySimple(vecUserInfo, false);
            return _os;
        }
    public:
        taf::Int32 iErrCode;
        std::string strErrMsg;
        CFtNewRank::FanTuanDetailInfo stCurDetailInfo;
        CFtNewRank::FanTuanScoreInfo stBackGoundScore;
        CFtNewRank::FanTuanLink stFanTuanLink;
        vector<CFtNewRank::STFansInfo> vecUserInfo;
    };
    inline bool operator==(const FanTuanStarRankInfoRsp&l, const FanTuanStarRankInfoRsp&r)
    {
        return l.iErrCode == r.iErrCode && l.strErrMsg == r.strErrMsg && l.stCurDetailInfo == r.stCurDetailInfo && l.stBackGoundScore == r.stBackGoundScore && l.stFanTuanLink == r.stFanTuanLink && l.vecUserInfo == r.vecUserInfo;
    }
    inline bool operator!=(const FanTuanStarRankInfoRsp&l, const FanTuanStarRankInfoRsp&r)
    {
        return !(l == r);
    }

    struct FanTuanStarRankInfoBatchReq : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanStarRankInfoBatchReq";
        }
        static string MD5()
        {
            return "8e7037082b6a19e4cd439ea243c62114";
        }
        FanTuanStarRankInfoBatchReq()
        {
        }
        void resetDefautlt()
        {
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(vecInfoBatchReq, 1);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(vecInfoBatchReq, 1, true);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(vecInfoBatchReq,"vecInfoBatchReq");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(vecInfoBatchReq, false);
            return _os;
        }
    public:
        vector<CFtNewRank::FanTuanStarRankInfoReq> vecInfoBatchReq;
    };
    inline bool operator==(const FanTuanStarRankInfoBatchReq&l, const FanTuanStarRankInfoBatchReq&r)
    {
        return l.vecInfoBatchReq == r.vecInfoBatchReq;
    }
    inline bool operator!=(const FanTuanStarRankInfoBatchReq&l, const FanTuanStarRankInfoBatchReq&r)
    {
        return !(l == r);
    }

    struct FanTuanStarRankInfoBatchRsp : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.FanTuanStarRankInfoBatchRsp";
        }
        static string MD5()
        {
            return "303aecb3e4a6f10fe8484675c22938d1";
        }
        FanTuanStarRankInfoBatchRsp()
        :iErrCode(0),strErrMsg("")
        {
        }
        void resetDefautlt()
        {
            iErrCode = 0;
            strErrMsg = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(iErrCode, 1);
            _os.write(strErrMsg, 2);
            _os.write(mapInfoBatchRsp, 3);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(iErrCode, 1, true);
            _is.read(strErrMsg, 2, false);
            _is.read(mapInfoBatchRsp, 3, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(iErrCode,"iErrCode");
            _ds.display(strErrMsg,"strErrMsg");
            _ds.display(mapInfoBatchRsp,"mapInfoBatchRsp");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(iErrCode, true);
            _ds.displaySimple(strErrMsg, true);
            _ds.displaySimple(mapInfoBatchRsp, false);
            return _os;
        }
    public:
        taf::Int32 iErrCode;
        std::string strErrMsg;
        map<taf::Int32, CFtNewRank::FanTuanStarRankInfoRsp> mapInfoBatchRsp;
    };
    inline bool operator==(const FanTuanStarRankInfoBatchRsp&l, const FanTuanStarRankInfoBatchRsp&r)
    {
        return l.iErrCode == r.iErrCode && l.strErrMsg == r.strErrMsg && l.mapInfoBatchRsp == r.mapInfoBatchRsp;
    }
    inline bool operator!=(const FanTuanStarRankInfoBatchRsp&l, const FanTuanStarRankInfoBatchRsp&r)
    {
        return !(l == r);
    }

    struct DokiRankFansGiftDataReq : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.DokiRankFansGiftDataReq";
        }
        static string MD5()
        {
            return "05511bece4a2b65e1361cf6867461c97";
        }
        DokiRankFansGiftDataReq()
        :iStarId(0)
        {
        }
        void resetDefautlt()
        {
            iStarId = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(iStarId, 1);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(iStarId, 1, true);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(iStarId,"iStarId");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(iStarId, false);
            return _os;
        }
    public:
        taf::Int32 iStarId;
    };
    inline bool operator==(const DokiRankFansGiftDataReq&l, const DokiRankFansGiftDataReq&r)
    {
        return l.iStarId == r.iStarId;
    }
    inline bool operator!=(const DokiRankFansGiftDataReq&l, const DokiRankFansGiftDataReq&r)
    {
        return !(l == r);
    }

    struct DokiRankFansGiftDataRsp : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.DokiRankFansGiftDataRsp";
        }
        static string MD5()
        {
            return "d0ad126fc09963745aa1a7ae290e8519";
        }
        DokiRankFansGiftDataRsp()
        :iErrCode(0),strErrMsg("")
        {
        }
        void resetDefautlt()
        {
            iErrCode = 0;
            strErrMsg = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(iErrCode, 1);
            _os.write(strErrMsg, 2);
            _os.write(vecUserInfo, 3);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(iErrCode, 1, true);
            _is.read(strErrMsg, 2, false);
            _is.read(vecUserInfo, 3, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(iErrCode,"iErrCode");
            _ds.display(strErrMsg,"strErrMsg");
            _ds.display(vecUserInfo,"vecUserInfo");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(iErrCode, true);
            _ds.displaySimple(strErrMsg, true);
            _ds.displaySimple(vecUserInfo, false);
            return _os;
        }
    public:
        taf::Int32 iErrCode;
        std::string strErrMsg;
        vector<CFtNewRank::STFansInfo> vecUserInfo;
    };
    inline bool operator==(const DokiRankFansGiftDataRsp&l, const DokiRankFansGiftDataRsp&r)
    {
        return l.iErrCode == r.iErrCode && l.strErrMsg == r.strErrMsg && l.vecUserInfo == r.vecUserInfo;
    }
    inline bool operator!=(const DokiRankFansGiftDataRsp&l, const DokiRankFansGiftDataRsp&r)
    {
        return !(l == r);
    }

    struct STGetUserInfoReq : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.STGetUserInfoReq";
        }
        static string MD5()
        {
            return "b60948316e6b381c4405fcf043850c7c";
        }
        STGetUserInfoReq()
        :lUserid(0)
        {
        }
        void resetDefautlt()
        {
            lUserid = 0;
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(lUserid, 0);
            _os.write(vecUserids, 1);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(lUserid, 0, true);
            _is.read(vecUserids, 1, true);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(lUserid,"lUserid");
            _ds.display(vecUserids,"vecUserids");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(lUserid, true);
            _ds.displaySimple(vecUserids, false);
            return _os;
        }
    public:
        taf::Int64 lUserid;
        vector<taf::Int64> vecUserids;
    };
    inline bool operator==(const STGetUserInfoReq&l, const STGetUserInfoReq&r)
    {
        return l.lUserid == r.lUserid && l.vecUserids == r.vecUserids;
    }
    inline bool operator!=(const STGetUserInfoReq&l, const STGetUserInfoReq&r)
    {
        return !(l == r);
    }

    struct STGetUserInfoRsp : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "CFtNewRank.STGetUserInfoRsp";
        }
        static string MD5()
        {
            return "f2efcdd4ac086ee6bdf8b21358660581";
        }
        STGetUserInfoRsp()
        :iErrCode(0),strErrMsg("")
        {
        }
        void resetDefautlt()
        {
            iErrCode = 0;
            strErrMsg = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& _os) const
        {
            _os.write(iErrCode, 0);
            _os.write(strErrMsg, 1);
            _os.write(mapUserInfo, 2);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& _is)
        {
            resetDefautlt();
            _is.read(iErrCode, 0, true);
            _is.read(strErrMsg, 1, false);
            _is.read(mapUserInfo, 2, false);
        }
        ostream& display(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.display(iErrCode,"iErrCode");
            _ds.display(strErrMsg,"strErrMsg");
            _ds.display(mapUserInfo,"mapUserInfo");
            return _os;
        }
        ostream& displaySimple(ostream& _os, int _level=0) const
        {
            taf::JceDisplayer _ds(_os, _level);
            _ds.displaySimple(iErrCode, true);
            _ds.displaySimple(strErrMsg, true);
            _ds.displaySimple(mapUserInfo, false);
            return _os;
        }
    public:
        taf::Int32 iErrCode;
        std::string strErrMsg;
        map<taf::Int64, CFtNewRank::STPersonData> mapUserInfo;
    };
    inline bool operator==(const STGetUserInfoRsp&l, const STGetUserInfoRsp&r)
    {
        return l.iErrCode == r.iErrCode && l.strErrMsg == r.strErrMsg && l.mapUserInfo == r.mapUserInfo;
    }
    inline bool operator!=(const STGetUserInfoRsp&l, const STGetUserInfoRsp&r)
    {
        return !(l == r);
    }


}

#define CFtNewRank_FanTuanScoreInfo_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.dwFanTuanId,b.dwFanTuanId);jce_copy_struct(a.strStarTotalScore,b.strStarTotalScore);jce_copy_struct(a.ddwVideoView,b.ddwVideoView);jce_copy_struct(a.ddwSearchCnt,b.ddwSearchCnt);jce_copy_struct(a.ddwFollowCnt,b.ddwFollowCnt);jce_copy_struct(a.ddwWeChatIndex,b.ddwWeChatIndex);jce_copy_struct(a.ddwPopularity,b.ddwPopularity);jce_copy_struct(a.ddwStarReplyCnt,b.ddwStarReplyCnt);jce_copy_struct(a.ddwStarCommentCnt,b.ddwStarCommentCnt);jce_copy_struct(a.ddwStarFanPaiCnt,b.ddwStarFanPaiCnt);jce_copy_struct(a.ddwStarOnlineCnt,b.ddwStarOnlineCnt);jce_copy_struct(a.ddwStarBefallCnt,b.ddwStarBefallCnt);jce_copy_struct(a.dwLastRank,b.dwLastRank);jce_copy_struct(a.dwCurRank,b.dwCurRank);jce_copy_struct(a.dfVideoScore,b.dfVideoScore);jce_copy_struct(a.dfSearchScore,b.dfSearchScore);jce_copy_struct(a.dfFollowScore,b.dfFollowScore);jce_copy_struct(a.dfWechatScore,b.dfWechatScore);jce_copy_struct(a.ddwStarCommentScore,b.ddwStarCommentScore);jce_copy_struct(a.ddwStarFanPaiScore,b.ddwStarFanPaiScore);jce_copy_struct(a.ddwStarOnlineScore,b.ddwStarOnlineScore);jce_copy_struct(a.ddwStarBefallScore,b.ddwStarBefallScore);jce_copy_struct(a.dwLastInfluenceWeekRank,b.dwLastInfluenceWeekRank);jce_copy_struct(a.dwCurInfluenceWeekRank,b.dwCurInfluenceWeekRank);

#define CFtNewRank_FanTuanDetailInfo_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.dwFanTuanId,b.dwFanTuanId);jce_copy_struct(a.dwStarId,b.dwStarId);jce_copy_struct(a.iStarType,b.iStarType);jce_copy_struct(a.strName,b.strName);jce_copy_struct(a.strDesc,b.strDesc);jce_copy_struct(a.strHeader,b.strHeader);jce_copy_struct(a.bAttention,b.bAttention);jce_copy_struct(a.stFanTuanScoreInfo,b.stFanTuanScoreInfo);jce_copy_struct(a.strHotShow,b.strHotShow);jce_copy_struct(a.strDataKey,b.strDataKey);jce_copy_struct(a.iPosition,b.iPosition);

#define CFtNewRank_BannerImg_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.people,b.people);jce_copy_struct(a.bg,b.bg);jce_copy_struct(a.name,b.name);

#define CFtNewRank_FanTuanLink_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.strRenqiLink,b.strRenqiLink);jce_copy_struct(a.strVideoLink,b.strVideoLink);

#define CFtNewRank_RankRule_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.strRuleDesc,b.strRuleDesc);jce_copy_struct(a.strRuleTitle,b.strRuleTitle);

#define CFtNewRank_STPersonData_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.lUserid,b.lUserid);jce_copy_struct(a.strNick,b.strNick);jce_copy_struct(a.strHead,b.strHead);jce_copy_struct(a.strCity,b.strCity);jce_copy_struct(a.strCountry,b.strCountry);jce_copy_struct(a.strSex,b.strSex);jce_copy_struct(a.cFrom,b.cFrom);jce_copy_struct(a.dwCreateTime,b.dwCreateTime);jce_copy_struct(a.dwStatus,b.dwStatus);jce_copy_struct(a.lGiftPoint,b.lGiftPoint);

#define CFtNewRank_STFansInfo_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.stPersonData,b.stPersonData);jce_copy_struct(a.lGiftPoint,b.lGiftPoint);jce_copy_struct(a.strPersonalLink,b.strPersonalLink);jce_copy_struct(a.stBadgeLevelInfo,b.stBadgeLevelInfo);

#define CFtNewRank_FanTuanStarRankMenuReq_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.cRankType,b.cRankType);jce_copy_struct(a.wPageFlags,b.wPageFlags);jce_copy_struct(a.cTimeType,b.cTimeType);jce_copy_struct(a.dwRankTime,b.dwRankTime);jce_copy_struct(a.dwReqNum,b.dwReqNum);jce_copy_struct(a.dwPage,b.dwPage);jce_copy_struct(a.strDataKey,b.strDataKey);jce_copy_struct(a.bFrom,b.bFrom);jce_copy_struct(a.dwStarId,b.dwStarId);

#define CFtNewRank_FanTuanStarRankMenuRsp_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.iErrCode,b.iErrCode);jce_copy_struct(a.strErrMsg,b.strErrMsg);jce_copy_struct(a.mapFtStarRankInfo,b.mapFtStarRankInfo);jce_copy_struct(a.dwPeri,b.dwPeri);jce_copy_struct(a.bHasNextPage,b.bHasNextPage);jce_copy_struct(a.stBannerImg,b.stBannerImg);jce_copy_struct(a.iTimeStamp,b.iTimeStamp);jce_copy_struct(a.vecUserInfo,b.vecUserInfo);

#define CFtNewRank_FanTuanStarRankInfoReq_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.dwFanTuanId,b.dwFanTuanId);jce_copy_struct(a.dwRankTime,b.dwRankTime);jce_copy_struct(a.cRankType,b.cRankType);jce_copy_struct(a.cTimeType,b.cTimeType);jce_copy_struct(a.dwStarId,b.dwStarId);jce_copy_struct(a.bFrom,b.bFrom);

#define CFtNewRank_FanTuanStarRankInfoRsp_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.iErrCode,b.iErrCode);jce_copy_struct(a.strErrMsg,b.strErrMsg);jce_copy_struct(a.stCurDetailInfo,b.stCurDetailInfo);jce_copy_struct(a.stBackGoundScore,b.stBackGoundScore);jce_copy_struct(a.stFanTuanLink,b.stFanTuanLink);jce_copy_struct(a.vecUserInfo,b.vecUserInfo);

#define CFtNewRank_FanTuanStarRankInfoBatchReq_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.vecInfoBatchReq,b.vecInfoBatchReq);

#define CFtNewRank_FanTuanStarRankInfoBatchRsp_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.iErrCode,b.iErrCode);jce_copy_struct(a.strErrMsg,b.strErrMsg);jce_copy_struct(a.mapInfoBatchRsp,b.mapInfoBatchRsp);

#define CFtNewRank_DokiRankFansGiftDataReq_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.iStarId,b.iStarId);

#define CFtNewRank_DokiRankFansGiftDataRsp_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.iErrCode,b.iErrCode);jce_copy_struct(a.strErrMsg,b.strErrMsg);jce_copy_struct(a.vecUserInfo,b.vecUserInfo);

#define CFtNewRank_STGetUserInfoReq_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.lUserid,b.lUserid);jce_copy_struct(a.vecUserids,b.vecUserids);

#define CFtNewRank_STGetUserInfoRsp_JCE_COPY_STRUCT_HELPER   \
        jce_copy_struct(a.iErrCode,b.iErrCode);jce_copy_struct(a.strErrMsg,b.strErrMsg);jce_copy_struct(a.mapUserInfo,b.mapUserInfo);



#endif
