// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.1.1.2 by WSRD Tencent.
// Generated from `ad_promotion_comm_enum.jce'
// **********************************************************************

#ifndef __AD_PROMOTION_COMM_ENUM_H_
#define __AD_PROMOTION_COMM_ENUM_H_

#include <map>
#include <string>
#include <vector>
#include "jce/Jce.h"
using namespace std;


namespace AdvertisingPromotion
{
    enum MATERIAL_TYPE_DEFINE
    {
        MATERIAL_TYPE_PRODUCT = 0,
        MATERIAL_TYPE_MUSIC = 5,
        MATERIAL_TYPE_FICTION = 8,
        MATERIAL_TYPE_APP = 9,
        MATERIAL_TYPE_GAME_APP = 10,
        MATERIAL_TYPE_OPERATION = 11,
        MATERIAL_TYPE_LIVE = 12,
        MATERIAL_TYPE_H5 = 13,
        MATERIAL_TYPE_BIG_H5 = 14,
        MATERIAL_TYPE_BANNER = 15,
        MATERIAL_TYPE_LOTTIE = 16,
        MATERIAL_TYPE_PULL_REFRESH = 17,
        MATERIAL_TYPE_ENTER_TIP = 18,
        MATERIAL_TYPE_COMM = 19,
    };
    inline string etos(const MATERIAL_TYPE_DEFINE & e)
    {
        switch(e)
        {
            case MATERIAL_TYPE_PRODUCT: return "MATERIAL_TYPE_PRODUCT";
            case MATERIAL_TYPE_MUSIC: return "MATERIAL_TYPE_MUSIC";
            case MATERIAL_TYPE_FICTION: return "MATERIAL_TYPE_FICTION";
            case MATERIAL_TYPE_APP: return "MATERIAL_TYPE_APP";
            case MATERIAL_TYPE_GAME_APP: return "MATERIAL_TYPE_GAME_APP";
            case MATERIAL_TYPE_OPERATION: return "MATERIAL_TYPE_OPERATION";
            case MATERIAL_TYPE_LIVE: return "MATERIAL_TYPE_LIVE";
            case MATERIAL_TYPE_H5: return "MATERIAL_TYPE_H5";
            case MATERIAL_TYPE_BIG_H5: return "MATERIAL_TYPE_BIG_H5";
            case MATERIAL_TYPE_BANNER: return "MATERIAL_TYPE_BANNER";
            case MATERIAL_TYPE_LOTTIE: return "MATERIAL_TYPE_LOTTIE";
            case MATERIAL_TYPE_PULL_REFRESH: return "MATERIAL_TYPE_PULL_REFRESH";
            case MATERIAL_TYPE_ENTER_TIP: return "MATERIAL_TYPE_ENTER_TIP";
            case MATERIAL_TYPE_COMM: return "MATERIAL_TYPE_COMM";
            default: return "";
        }
    }
    inline int stoe(const string & s, MATERIAL_TYPE_DEFINE & e)
    {
        if(s == "MATERIAL_TYPE_PRODUCT")  { e=MATERIAL_TYPE_PRODUCT; return 0;}
        if(s == "MATERIAL_TYPE_MUSIC")  { e=MATERIAL_TYPE_MUSIC; return 0;}
        if(s == "MATERIAL_TYPE_FICTION")  { e=MATERIAL_TYPE_FICTION; return 0;}
        if(s == "MATERIAL_TYPE_APP")  { e=MATERIAL_TYPE_APP; return 0;}
        if(s == "MATERIAL_TYPE_GAME_APP")  { e=MATERIAL_TYPE_GAME_APP; return 0;}
        if(s == "MATERIAL_TYPE_OPERATION")  { e=MATERIAL_TYPE_OPERATION; return 0;}
        if(s == "MATERIAL_TYPE_LIVE")  { e=MATERIAL_TYPE_LIVE; return 0;}
        if(s == "MATERIAL_TYPE_H5")  { e=MATERIAL_TYPE_H5; return 0;}
        if(s == "MATERIAL_TYPE_BIG_H5")  { e=MATERIAL_TYPE_BIG_H5; return 0;}
        if(s == "MATERIAL_TYPE_BANNER")  { e=MATERIAL_TYPE_BANNER; return 0;}
        if(s == "MATERIAL_TYPE_LOTTIE")  { e=MATERIAL_TYPE_LOTTIE; return 0;}
        if(s == "MATERIAL_TYPE_PULL_REFRESH")  { e=MATERIAL_TYPE_PULL_REFRESH; return 0;}
        if(s == "MATERIAL_TYPE_ENTER_TIP")  { e=MATERIAL_TYPE_ENTER_TIP; return 0;}
        if(s == "MATERIAL_TYPE_COMM")  { e=MATERIAL_TYPE_COMM; return 0;}

        return -1;
    }

    enum PROMOTION_PAGE_ID
    {
        EnumPageStartUp = 1,
        EnumPageChannel = 2,
        EnumPagePersonal = 3,
        EnumPagePlay = 4,
        EnumPageSearch = 5,
        EnumPageDoki = 6,
        EnumPageStar = 7,
        EnumPageVStore = 8,
    };
    inline string etos(const PROMOTION_PAGE_ID & e)
    {
        switch(e)
        {
            case EnumPageStartUp: return "EnumPageStartUp";
            case EnumPageChannel: return "EnumPageChannel";
            case EnumPagePersonal: return "EnumPagePersonal";
            case EnumPagePlay: return "EnumPagePlay";
            case EnumPageSearch: return "EnumPageSearch";
            case EnumPageDoki: return "EnumPageDoki";
            case EnumPageStar: return "EnumPageStar";
            case EnumPageVStore: return "EnumPageVStore";
            default: return "";
        }
    }
    inline int stoe(const string & s, PROMOTION_PAGE_ID & e)
    {
        if(s == "EnumPageStartUp")  { e=EnumPageStartUp; return 0;}
        if(s == "EnumPageChannel")  { e=EnumPageChannel; return 0;}
        if(s == "EnumPagePersonal")  { e=EnumPagePersonal; return 0;}
        if(s == "EnumPagePlay")  { e=EnumPagePlay; return 0;}
        if(s == "EnumPageSearch")  { e=EnumPageSearch; return 0;}
        if(s == "EnumPageDoki")  { e=EnumPageDoki; return 0;}
        if(s == "EnumPageStar")  { e=EnumPageStar; return 0;}
        if(s == "EnumPageVStore")  { e=EnumPageVStore; return 0;}

        return -1;
    }

    enum PROMOTION_MOD_ID
    {
        EnumStartUpAdMod = 101,
        EnumChannelSearchAdMod = 201,
        EnumChannelActivityAdMod = 202,
        EnumChannelPullAdMod = 203,
        EnumChannelPopupLayerAdMod = 204,
        EnumChannelFootBanner = 205,
        EnumPersonalAdMod = 301,
        EnumPlayRelateAdMod = 401,
        EnumPlayConmentAdMod = 402,
        EnumPlayLoadingAdMod = 403,
        EnumBannerAdMod = 404,
        EnumPeriphAdMod = 405,
        EnumWebFrameAdMod = 406,
        EnumSearchAdMod = 501,
        EnumSearchKeyFootBanner = 502,
        EnumSearchKeyLottie = 503,
        EnumSearchKeyPopupLayerAdMod = 504,
        EnumSearchKeyHeadBanner = 505,
        EnumDokiPullMod = 601,
        EnumDokiPopupLayerAdMod = 602,
        EnumDokiFootBanner = 603,
        EnumStarPullMod = 701,
        EnumStarFootBanner = 702,
        EnumVStorePopupLayerAdMod = 801,
    };
    inline string etos(const PROMOTION_MOD_ID & e)
    {
        switch(e)
        {
            case EnumStartUpAdMod: return "EnumStartUpAdMod";
            case EnumChannelSearchAdMod: return "EnumChannelSearchAdMod";
            case EnumChannelActivityAdMod: return "EnumChannelActivityAdMod";
            case EnumChannelPullAdMod: return "EnumChannelPullAdMod";
            case EnumChannelPopupLayerAdMod: return "EnumChannelPopupLayerAdMod";
            case EnumChannelFootBanner: return "EnumChannelFootBanner";
            case EnumPersonalAdMod: return "EnumPersonalAdMod";
            case EnumPlayRelateAdMod: return "EnumPlayRelateAdMod";
            case EnumPlayConmentAdMod: return "EnumPlayConmentAdMod";
            case EnumPlayLoadingAdMod: return "EnumPlayLoadingAdMod";
            case EnumBannerAdMod: return "EnumBannerAdMod";
            case EnumPeriphAdMod: return "EnumPeriphAdMod";
            case EnumWebFrameAdMod: return "EnumWebFrameAdMod";
            case EnumSearchAdMod: return "EnumSearchAdMod";
            case EnumSearchKeyFootBanner: return "EnumSearchKeyFootBanner";
            case EnumSearchKeyLottie: return "EnumSearchKeyLottie";
            case EnumSearchKeyPopupLayerAdMod: return "EnumSearchKeyPopupLayerAdMod";
            case EnumSearchKeyHeadBanner: return "EnumSearchKeyHeadBanner";
            case EnumDokiPullMod: return "EnumDokiPullMod";
            case EnumDokiPopupLayerAdMod: return "EnumDokiPopupLayerAdMod";
            case EnumDokiFootBanner: return "EnumDokiFootBanner";
            case EnumStarPullMod: return "EnumStarPullMod";
            case EnumStarFootBanner: return "EnumStarFootBanner";
            case EnumVStorePopupLayerAdMod: return "EnumVStorePopupLayerAdMod";
            default: return "";
        }
    }
    inline int stoe(const string & s, PROMOTION_MOD_ID & e)
    {
        if(s == "EnumStartUpAdMod")  { e=EnumStartUpAdMod; return 0;}
        if(s == "EnumChannelSearchAdMod")  { e=EnumChannelSearchAdMod; return 0;}
        if(s == "EnumChannelActivityAdMod")  { e=EnumChannelActivityAdMod; return 0;}
        if(s == "EnumChannelPullAdMod")  { e=EnumChannelPullAdMod; return 0;}
        if(s == "EnumChannelPopupLayerAdMod")  { e=EnumChannelPopupLayerAdMod; return 0;}
        if(s == "EnumChannelFootBanner")  { e=EnumChannelFootBanner; return 0;}
        if(s == "EnumPersonalAdMod")  { e=EnumPersonalAdMod; return 0;}
        if(s == "EnumPlayRelateAdMod")  { e=EnumPlayRelateAdMod; return 0;}
        if(s == "EnumPlayConmentAdMod")  { e=EnumPlayConmentAdMod; return 0;}
        if(s == "EnumPlayLoadingAdMod")  { e=EnumPlayLoadingAdMod; return 0;}
        if(s == "EnumBannerAdMod")  { e=EnumBannerAdMod; return 0;}
        if(s == "EnumPeriphAdMod")  { e=EnumPeriphAdMod; return 0;}
        if(s == "EnumWebFrameAdMod")  { e=EnumWebFrameAdMod; return 0;}
        if(s == "EnumSearchAdMod")  { e=EnumSearchAdMod; return 0;}
        if(s == "EnumSearchKeyFootBanner")  { e=EnumSearchKeyFootBanner; return 0;}
        if(s == "EnumSearchKeyLottie")  { e=EnumSearchKeyLottie; return 0;}
        if(s == "EnumSearchKeyPopupLayerAdMod")  { e=EnumSearchKeyPopupLayerAdMod; return 0;}
        if(s == "EnumSearchKeyHeadBanner")  { e=EnumSearchKeyHeadBanner; return 0;}
        if(s == "EnumDokiPullMod")  { e=EnumDokiPullMod; return 0;}
        if(s == "EnumDokiPopupLayerAdMod")  { e=EnumDokiPopupLayerAdMod; return 0;}
        if(s == "EnumDokiFootBanner")  { e=EnumDokiFootBanner; return 0;}
        if(s == "EnumStarPullMod")  { e=EnumStarPullMod; return 0;}
        if(s == "EnumStarFootBanner")  { e=EnumStarFootBanner; return 0;}
        if(s == "EnumVStorePopupLayerAdMod")  { e=EnumVStorePopupLayerAdMod; return 0;}

        return -1;
    }

    enum EnumCmd
    {
        EnumCmdQueryAdTasks = 256,
        EnumCmdCreateAdTasks = 257,
        EnumCmdUpdateAdTasks = 258,
        EnumCmdQuerySearchKeys = 259,
        EnumCmdPullAdTasks = 260,
        EnumCmdQueryStartPageAdTasks = 60312,
    };
    inline string etos(const EnumCmd & e)
    {
        switch(e)
        {
            case EnumCmdQueryAdTasks: return "EnumCmdQueryAdTasks";
            case EnumCmdCreateAdTasks: return "EnumCmdCreateAdTasks";
            case EnumCmdUpdateAdTasks: return "EnumCmdUpdateAdTasks";
            case EnumCmdQuerySearchKeys: return "EnumCmdQuerySearchKeys";
            case EnumCmdPullAdTasks: return "EnumCmdPullAdTasks";
            case EnumCmdQueryStartPageAdTasks: return "EnumCmdQueryStartPageAdTasks";
            default: return "";
        }
    }
    inline int stoe(const string & s, EnumCmd & e)
    {
        if(s == "EnumCmdQueryAdTasks")  { e=EnumCmdQueryAdTasks; return 0;}
        if(s == "EnumCmdCreateAdTasks")  { e=EnumCmdCreateAdTasks; return 0;}
        if(s == "EnumCmdUpdateAdTasks")  { e=EnumCmdUpdateAdTasks; return 0;}
        if(s == "EnumCmdQuerySearchKeys")  { e=EnumCmdQuerySearchKeys; return 0;}
        if(s == "EnumCmdPullAdTasks")  { e=EnumCmdPullAdTasks; return 0;}
        if(s == "EnumCmdQueryStartPageAdTasks")  { e=EnumCmdQueryStartPageAdTasks; return 0;}

        return -1;
    }

    enum EnumTestCmd
    {
        EnumTestCmdCreateAdTasks = 20480,
    };
    inline string etos(const EnumTestCmd & e)
    {
        switch(e)
        {
            case EnumTestCmdCreateAdTasks: return "EnumTestCmdCreateAdTasks";
            default: return "";
        }
    }
    inline int stoe(const string & s, EnumTestCmd & e)
    {
        if(s == "EnumTestCmdCreateAdTasks")  { e=EnumTestCmdCreateAdTasks; return 0;}

        return -1;
    }


}



#endif
