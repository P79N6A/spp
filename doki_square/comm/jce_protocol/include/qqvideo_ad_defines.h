// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.1.1.2 by WSRD Tencent.
// Generated from `qqvideo_ad_defines.jce'
// **********************************************************************

#ifndef __QQVIDEO_AD_DEFINES_H_
#define __QQVIDEO_AD_DEFINES_H_

#include <map>
#include <string>
#include <vector>
#include "jce/Jce.h"
using namespace std;


namespace jce
{
    enum EAdActionType
    {
        EAdActionOpenH5 = 0,
        EAdActionDownLoad = 1,
        EAdActionOpenApp = 2,
        EAdActionOpenJDH5 = 3,
        EAdActionOpenWx = 100,
        EAdActionOpenNativePage = 101,
        EAdActionOpenMiniProgram = 102,
        EAdActionOpenCanvas = 103,
        EAdActionNoAction = 999,
    };
    inline string etos(const EAdActionType & e)
    {
        switch(e)
        {
            case EAdActionOpenH5: return "EAdActionOpenH5";
            case EAdActionDownLoad: return "EAdActionDownLoad";
            case EAdActionOpenApp: return "EAdActionOpenApp";
            case EAdActionOpenJDH5: return "EAdActionOpenJDH5";
            case EAdActionOpenWx: return "EAdActionOpenWx";
            case EAdActionOpenNativePage: return "EAdActionOpenNativePage";
            case EAdActionOpenMiniProgram: return "EAdActionOpenMiniProgram";
            case EAdActionOpenCanvas: return "EAdActionOpenCanvas";
            case EAdActionNoAction: return "EAdActionNoAction";
            default: return "";
        }
    }
    inline int stoe(const string & s, EAdActionType & e)
    {
        if(s == "EAdActionOpenH5")  { e=EAdActionOpenH5; return 0;}
        if(s == "EAdActionDownLoad")  { e=EAdActionDownLoad; return 0;}
        if(s == "EAdActionOpenApp")  { e=EAdActionOpenApp; return 0;}
        if(s == "EAdActionOpenJDH5")  { e=EAdActionOpenJDH5; return 0;}
        if(s == "EAdActionOpenWx")  { e=EAdActionOpenWx; return 0;}
        if(s == "EAdActionOpenNativePage")  { e=EAdActionOpenNativePage; return 0;}
        if(s == "EAdActionOpenMiniProgram")  { e=EAdActionOpenMiniProgram; return 0;}
        if(s == "EAdActionOpenCanvas")  { e=EAdActionOpenCanvas; return 0;}
        if(s == "EAdActionNoAction")  { e=EAdActionNoAction; return 0;}

        return -1;
    }

    enum EAdType
    {
        EAdTypeUnknown = 0,
        EAdTypePre = 1,
        EAdTypePause = 2,
        EAdTypeMiddle = 3,
        EAdTypeBack = 4,
        EAdTypeOralBroadcast = 5,
        EAdTypeIvb = 6,
        EAdTypeCorner = 7,
        EAdTypeBarrage = 8,
        EAdTypeLoading = 9,
        EAdTypeProgressBar = 10,
        EAdTypeSuperCorner = 11,
        EAdTypeDefinition = 12,
        EAdTypeBuyWhileWatch = 13,
        EAdTypeCreativeInsertion = 14,
        EAdTypeLiveCorner = 15,
        EAdTypeVideoIn = 16,
    };
    inline string etos(const EAdType & e)
    {
        switch(e)
        {
            case EAdTypeUnknown: return "EAdTypeUnknown";
            case EAdTypePre: return "EAdTypePre";
            case EAdTypePause: return "EAdTypePause";
            case EAdTypeMiddle: return "EAdTypeMiddle";
            case EAdTypeBack: return "EAdTypeBack";
            case EAdTypeOralBroadcast: return "EAdTypeOralBroadcast";
            case EAdTypeIvb: return "EAdTypeIvb";
            case EAdTypeCorner: return "EAdTypeCorner";
            case EAdTypeBarrage: return "EAdTypeBarrage";
            case EAdTypeLoading: return "EAdTypeLoading";
            case EAdTypeProgressBar: return "EAdTypeProgressBar";
            case EAdTypeSuperCorner: return "EAdTypeSuperCorner";
            case EAdTypeDefinition: return "EAdTypeDefinition";
            case EAdTypeBuyWhileWatch: return "EAdTypeBuyWhileWatch";
            case EAdTypeCreativeInsertion: return "EAdTypeCreativeInsertion";
            case EAdTypeLiveCorner: return "EAdTypeLiveCorner";
            case EAdTypeVideoIn: return "EAdTypeVideoIn";
            default: return "";
        }
    }
    inline int stoe(const string & s, EAdType & e)
    {
        if(s == "EAdTypeUnknown")  { e=EAdTypeUnknown; return 0;}
        if(s == "EAdTypePre")  { e=EAdTypePre; return 0;}
        if(s == "EAdTypePause")  { e=EAdTypePause; return 0;}
        if(s == "EAdTypeMiddle")  { e=EAdTypeMiddle; return 0;}
        if(s == "EAdTypeBack")  { e=EAdTypeBack; return 0;}
        if(s == "EAdTypeOralBroadcast")  { e=EAdTypeOralBroadcast; return 0;}
        if(s == "EAdTypeIvb")  { e=EAdTypeIvb; return 0;}
        if(s == "EAdTypeCorner")  { e=EAdTypeCorner; return 0;}
        if(s == "EAdTypeBarrage")  { e=EAdTypeBarrage; return 0;}
        if(s == "EAdTypeLoading")  { e=EAdTypeLoading; return 0;}
        if(s == "EAdTypeProgressBar")  { e=EAdTypeProgressBar; return 0;}
        if(s == "EAdTypeSuperCorner")  { e=EAdTypeSuperCorner; return 0;}
        if(s == "EAdTypeDefinition")  { e=EAdTypeDefinition; return 0;}
        if(s == "EAdTypeBuyWhileWatch")  { e=EAdTypeBuyWhileWatch; return 0;}
        if(s == "EAdTypeCreativeInsertion")  { e=EAdTypeCreativeInsertion; return 0;}
        if(s == "EAdTypeLiveCorner")  { e=EAdTypeLiveCorner; return 0;}
        if(s == "EAdTypeVideoIn")  { e=EAdTypeVideoIn; return 0;}

        return -1;
    }

    enum EAdOpenAppFailedAction
    {
        EAdopenAppFailedNone = 0,
        EAdopenAppFailedToWebview = 1,
        EAdopenAppFailedToDownload = 2,
    };
    inline string etos(const EAdOpenAppFailedAction & e)
    {
        switch(e)
        {
            case EAdopenAppFailedNone: return "EAdopenAppFailedNone";
            case EAdopenAppFailedToWebview: return "EAdopenAppFailedToWebview";
            case EAdopenAppFailedToDownload: return "EAdopenAppFailedToDownload";
            default: return "";
        }
    }
    inline int stoe(const string & s, EAdOpenAppFailedAction & e)
    {
        if(s == "EAdopenAppFailedNone")  { e=EAdopenAppFailedNone; return 0;}
        if(s == "EAdopenAppFailedToWebview")  { e=EAdopenAppFailedToWebview; return 0;}
        if(s == "EAdopenAppFailedToDownload")  { e=EAdopenAppFailedToDownload; return 0;}

        return -1;
    }

    enum EAdPriceMode
    {
        EAdPriceModeCPM = 1,
        EAdPriceModeCPD = 2,
    };
    inline string etos(const EAdPriceMode & e)
    {
        switch(e)
        {
            case EAdPriceModeCPM: return "EAdPriceModeCPM";
            case EAdPriceModeCPD: return "EAdPriceModeCPD";
            default: return "";
        }
    }
    inline int stoe(const string & s, EAdPriceMode & e)
    {
        if(s == "EAdPriceModeCPM")  { e=EAdPriceModeCPM; return 0;}
        if(s == "EAdPriceModeCPD")  { e=EAdPriceModeCPD; return 0;}

        return -1;
    }

    enum EAdONAViewType
    {
        EnumAdONALeftImageRightTextAdPoster = 150,
    };
    inline string etos(const EAdONAViewType & e)
    {
        switch(e)
        {
            case EnumAdONALeftImageRightTextAdPoster: return "EnumAdONALeftImageRightTextAdPoster";
            default: return "";
        }
    }
    inline int stoe(const string & s, EAdONAViewType & e)
    {
        if(s == "EnumAdONALeftImageRightTextAdPoster")  { e=EnumAdONALeftImageRightTextAdPoster; return 0;}

        return -1;
    }


}



#endif
